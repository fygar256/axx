#!/usr/bin/zsh

# 引数の確認
if [ $# -ne 3 ]; then
    echo "Usage: $0 <tsv_file> <raw_binary> <output_elf>"
    exit 1
fi

TSV_FILE=$1
RAW_BINARY=$2
OUTPUT_ELF=$3

# 一時ファイルの作成
TEMP_LD_SCRIPT=$(mktemp)
TEMP_OBJ=$(mktemp)

# リンカスクリプトの生成
echo "SECTIONS {" > $TEMP_LD_SCRIPT
while IFS=$'\t' read -r section_name start_addr size flags || [ -n "$section_name" ]; do
    if [[ -v "$size" ]]; then
        echo "  $section_name $start_addr : { *($section_name) } : $flags" >> $TEMP_LD_SCRIPT
    fi
done < $TSV_FILE
echo "}" >> $TEMP_LD_SCRIPT

# rawバイナリをオブジェクトファイルに変換
objcopy -I binary -O elf64-x86-64 --rename-section .data=.text $RAW_BINARY $TEMP_OBJ

# リロケータブルELFファイルの作成
ld -r -o $OUTPUT_ELF -T $TEMP_LD_SCRIPT $TEMP_OBJ

# シンボルの追加
while IFS=$'\t' read -r label_name address size flags || [ -n "$label_name" ]; do
    if [[ -z "$size" ]]; then
        objcopy --add-symbol $label_name=$address $OUTPUT_ELF
    fi
done < $TSV_FILE

# 一時ファイルの削除
rm $TEMP_LD_SCRIPT $TEMP_OBJ

echo "Created $OUTPUT_ELF"
